# To build and deploy to Cloud Run, run from this directory:
# $ gcloud builds submit app --config=cloudbuild.yaml
steps:
  # Build app
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '.', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/pop-stats/pop-stats:${COMMIT_SHA}', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/pop-stats/pop-stats','-f', 'Dockerfile']
    dir: 'app'  
    id: build
  # Run unit tests
  - name: us-central1-docker.pkg.dev/$PROJECT_ID/pop-stats/pop-stats
    entrypoint: python
    args: ["unit_tests.py"]
    dir: 'app'
    id: test
  # Verify code with sonarqube - Quality gate
  - name: 'gcr.io/$PROJECT_ID/sonar-scanner:latest'
    entrypoint: 'bash'
    args:
    - -c
    - /launch.sh -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$$SONAR_TOKEN -Dsonar.projectKey=$$SONAR_PROJECT_KEY -Dsonar.organization=$$SONAR_ORG -Dsonar.sources=./app -Dsonar.qualitygate.wait=false
    secretEnv: ['SONAR_TOKEN','SONAR_ORG','SONAR_PROJECT_KEY']     
  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/pop-stats/pop-stats:${COMMIT_SHA}']
    id: push
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/pop-stats/pop-stats:latest']
  # Vulnerability gate
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: 'bash'
    args: [ '-c', "gcloud secrets versions access latest --secret=signer_policy --format='get(payload.data)' | tr '_-' '/+' | base64 -d > policy.yaml" ]
    id: get-policy
  - name: gcr.io/$PROJECT_ID/kritis-signer
    entrypoint: /bin/bash
    args:
    - -c
    - |
      /kritis/signer \
      -v=10 \
      -alsologtostderr \
      -image='us-central1-docker.pkg.dev/$PROJECT_ID/pop-stats/pop-stats:${COMMIT_SHA}' \
      -policy=policy.yaml \
      -kms_key_name=$$KMS_KEY_NAME \
      -kms_digest_alg=$$KMS_DIGEST_ALG \
      -note_name=$$NOTE_NAME
    #waitFor: ["push"] 
    id: vulnsign
    #images: ['us-central1-docker.pkg.dev/$PROJECT_ID/pop-stats/pop-stats:${COMMIT_SHA}']    
    secretEnv: ['KMS_KEY_NAME','KMS_DIGEST_ALG','NOTE_NAME']
  # Create release in Google Cloud Deploy
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: gcloud
    args: 
      [
        "beta", "deploy", "releases", "create", "rel-${SHORT_SHA}",
        "--delivery-pipeline", "pop-stats-pipeline",
        "--region", "us-central1",
        "--annotations", "commitId=${REVISION_ID}",
        "--images", "pop-stats=us-central1-docker.pkg.dev/$PROJECT_ID/pop-stats/pop-stats:${COMMIT_SHA}"
      ]
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/sonar_token/versions/4
    env: 'SONAR_TOKEN'
  - versionName: projects/$PROJECT_ID/secrets/sonar_org/versions/1
    env: 'SONAR_ORG'
  - versionName: projects/$PROJECT_ID/secrets/sonar_project_key/versions/1
    env: 'SONAR_PROJECT_KEY'
  - versionName: projects/$PROJECT_ID/secrets/kms_key_name/versions/1
    env: 'KMS_KEY_NAME'
  - versionName: projects/$PROJECT_ID/secrets/kms_digest_alg/versions/1
    env: 'KMS_DIGEST_ALG'
  - versionName: projects/$PROJECT_ID/secrets/note_name/versions/1
    env: 'NOTE_NAME'    
  #- versionName: projects/$PROJECT_ID/secrets/signer_policy/versions/1
  #  env: 'SIGNER_POLICY'        